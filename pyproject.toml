[build-system]
requires = ["setuptools>=61.0.0", "wheel>=0.36.1"]
build-backend = "setuptools.build_meta"

[project]
name = "versioned_collection"
description = "MongoDB collection versioning and tracking in Python."
license = { text = "Apache License 2.0" }
keywords = ["mongodb", "collection", "collection version control"]
dynamic = ["version", "dependencies"]
requires-python = ">= 3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: IPython",
    "Framework :: Jupyter",
    "Intended Audience :: Developers",
    "Topic :: Software Development",
    "Topic :: Software Development :: Debuggers",
    "Topic :: Software Development :: Version Control",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: POSIX :: Linux",
]
readme = "README.md"
authors = [
    { name = "Humanising Autonomy", email = "info@humanisingautonomy.com" },
    { name = "Victor Apostol" },
]

[project.optional-dependencies]
tests = [
    "coverage[toml]>=7.0.0",
]

lint = [
  "pyink",
  "blackdoc",
  "darglint",
  "flake8",
  "flake8-bandit",
  "flake8-bugbear",
  "flake8-docstrings",
  "flake8-isort",
  "isort",
  "pep8-naming",
  "pydocstyle",
  "restructuredtext_lint"
]

[project.urls]
"Source code" = "https://github.com/HumanisingAutonomy/versioned_collection"

[project.scripts]
vc = "vc_cli.cli:cli"

[tool.setuptools.packages.find]
where = ["."]
include = ["versioned_collection*", "vc_cli*"]
exclude = ["tests*"]

[tool.setuptools.dynamic]
dependencies = { file = ["requirements.txt"] }


[tool.coverage]
[tool.coverage.run]
relative_files = true
source = ["versioned_collection/"]
parallel = true
concurrency = ["multiprocessing", "thread"]
omit = ["*version.py"]

[tool.coverage.report]
omit = ["*version.py"]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "@overload",
    "if (typing\\.)?TYPE_CHECKING:",
]

[tool.coverage.html]
directory = "htmlcov"


[tool.black]
line-length = 80
skip-string-normalization = true

[tool.pyink]
line-length = 80
skip-string-normalization = true